# The samseg atlas build use case should be in a seperate container since support
# for dynamic meshed is enabled, which affects performance.  
# See CMake Warning at gems/CMakeLists.txt:38
#    Since you're building executables to compute meshes, ITK dynamic meshes
#    willbe used (internally using std::map instead of std::vector to store
#    lists of points, cells, etc).Everything will still work, but anything that
#    only uses existing meshes will beslower than it could be (up to 100%
#    slower)

# see https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
version: 0.2

env:
  shell: bash
  # https://stackoverflow.com/questions/58216549/how-to-retrieve-secret-manager-data-in-buildspec-yaml
  parameter-store:
    DOCKERHUB_PASS_PARAM: /dockerhub-access-token-for-pwighton
    FS_LICENSE_PARAM: /freesurfer-ci-license
            
phases:
  install:
    on-failure: ABORT
    commands:
      - export DOCKERHUB_PASS=$DOCKERHUB_PASS_PARAM
      - export FS_LICENSE=$FS_LICENSE_PARAM
      - docker login --username pwighton --password $DOCKERHUB_PASS
  build:
    on-failure: ABORT
    commands:
      - docker run pwighton/neurodocker:latest generate docker --base-image ubuntu:xenial --pkg-manager apt --yes --freesurfer license_base64=$FS_LICENSE method=source repo=https://github.com/pwighton/freesurfer.git version=20210513-fs-infant-dev-merge minimal=on samseg_atlas_build=on infant_module=off install_python_deps=off distribute_fspython=off | docker build --no-cache -t pwighton/fs-samseg-atlas-build -
  post_build:
    on-failure: ABORT
    commands:
      - docker push pwighton/samseg-atlas-build:latest
